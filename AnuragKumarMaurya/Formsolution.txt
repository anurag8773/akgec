// Install required packages: npm install react react-dom axios
// Create a new React app: npx create-react-app register-form

// File: src/App.js
import React, { useState } from 'react';
import axios from 'axios';
import './App.scss';

const App = () => {
  const [formData, setFormData] = useState({ name: '', email: '', phone: '' });
  const [employees, setEmployees] = useState([]);
  const [message, setMessage] = useState('');

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleFormSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post('https://jsonplaceholder.typicode.com/posts', formData);
      setMessage('Employee registered successfully!');
      console.log(response.data);
    } catch (error) {
      setMessage('Error registering employee.');
      console.error(error);
    }
  };

  const fetchEmployees = async () => {
    try {
      const response = await axios.get('https://jsonplaceholder.typicode.com/users');
      setEmployees(response.data);
    } catch (error) {
      console.error('Error fetching employees:', error);
    }
  };

  return (
    <div className="app">
      <h1>Employee Management</h1>

      <form className="register-form" onSubmit={handleFormSubmit}>
        <h2>Register Employee</h2>
        <input
          type="text"
          name="name"
          placeholder="Name"
          value={formData.name}
          onChange={handleInputChange}
          required
        />
        <input
          type="email"
          name="email"
          placeholder="Email"
          value={formData.email}
          onChange={handleInputChange}
          required
        />
        <input
          type="text"
          name="phone"
          placeholder="Phone"
          value={formData.phone}
          onChange={handleInputChange}
          required
        />
        <button type="submit">Register</button>
      </form>
      {message && <p className="message">{message}</p>}

      <button className="fetch-button" onClick={fetchEmployees}>Fetch Employees</button>
      <div className="employee-list">
        <h2>Employee List</h2>
        {employees.length > 0 ? (
          <table>
            <thead>
              <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
              </tr>
            </thead>
            <tbody>
              {employees.map((employee) => (
                <tr key={employee.id}>
                  <td>{employee.id}</td>
                  <td>{employee.name}</td>
                  <td>{employee.email}</td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <p>No employees found.</p>
        )}
      </div>
    </div>
  );
};

export default App;